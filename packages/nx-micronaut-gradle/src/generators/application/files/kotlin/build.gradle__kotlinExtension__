<% if(dsl === 'groovy') { -%>
plugins {
    id("org.jetbrains.kotlin.jvm") version "1.8.20"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.8.20"
    id("com.google.devtools.ksp") version "1.8.20-1.0.10"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.0-M2"
}

version = "<%= projectVersion %>"
group = "<%= groupId %>"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("<%= packageName %>.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("${javaVersion}")
}

tasks {
    compileKotlin {
        compilerOptions {
           jvmTarget = "${javaVersion}"
        }
    }
    compileTestKotlin {
        compilerOptions {
           jvmTarget = "${javaVersion}"
        }
    }
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("<%= packageName %>.*")
    }
}
<% } -%>
<% if(dsl === 'kotlin') { -%>
val javaVersion: String by project
val kotlinVersion=project.properties.get("kotlinVersion")

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.8.20"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.8.20"
    id("com.google.devtools.ksp") version "1.8.20-1.0.10"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.0-M2"
}

version = "<%= projectVersion %>"
group = "<%= groupId %>"


repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("<%= packageName %>.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion(javaVersion)
}

tasks {
    compileKotlin {
        compilerOptions {
            jvmTarget.set(javaVersion)
        }
    }
    compileTestKotlin {
        compilerOptions {
            jvmTarget.set(javaVersion)
        }
    }
}
graalvmNative.toolchainDetection.set(false)
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("<%= packageName %>.*")
    }
}
<% } -%>
