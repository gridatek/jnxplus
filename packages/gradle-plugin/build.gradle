/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/custom_plugins.html
 */

plugins {
  // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
  id 'java-gradle-plugin'

  // Apply the Groovy plugin to add support for Groovy
  id 'groovy'

  id 'maven-publish'

  id 'com.gradle.plugin-publish' version '1.2.0'
}

group = 'io.github.khalilou88.jnxplus'
version = '0.2.1'

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

dependencies {
  // Use the awesome Spock testing and specification framework
  testImplementation 'org.spockframework:spock-core:2.2-groovy-3.0'
}

gradlePlugin {
  // Define the plugin
  website = 'https://khalilou88.github.io/jnxplus/#/gradle-plugin'
  vcsUrl = 'https://github.com/khalilou88/jnxplus'
  plugins {
    jnxplusPlugin {
      id = 'io.github.khalilou88.jnxplus'
      displayName = 'jnxplus gradle plugin'
      description = 'jnxplus gradle plugin for depedency graph'
      tags.set(['nx', 'jnxplus'])
      implementationClass = 'io.github.khalilou88.jnxplus.GradlePlugin'
    }
  }
}

// Add a source set for the functional test suite
sourceSets {
  functionalTest {
  }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
  // Run the functional tests as part of `check`
  dependsOn(tasks.functionalTest)
}

tasks.named('test') {
  // Use JUnit Jupiter for unit tests.
  useJUnitPlatform()
}
