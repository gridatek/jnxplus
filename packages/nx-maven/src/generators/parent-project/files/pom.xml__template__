<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId><%= parentGroupId %></groupId>
		<artifactId><%= parentProjectName %></artifactId>
		<version><%= parentProjectVersion %></version>
    	<relativePath><%= relativePath %></relativePath>
	</parent>
	<groupId><%= groupId %></groupId>
	<artifactId><%= projectName %></artifactId>
	<version><%= projectVersion %></version>
  	<packaging>pom</packaging>
	<name><%= projectName %></name>
	<description>This project was generated with nx-maven</description>

<% if(framework === 'spring-boot') { -%>
  <properties>
    <resource.delimiter>@</resource.delimiter>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
  </properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
          <executions>
            <execution>
              <id>repackage</id>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <mainClass>${start-class}</mainClass>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <mainClass>${start-class}</mainClass>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>

<% if(language === 'kotlin' || language === 'java-kotlin') { -%>
        <plugin>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-plugin</artifactId>
            <version>${kotlin.version}</version>
            <configuration>
              <jvmTarget>${java.version}</jvmTarget>
              <javaParameters>true</javaParameters>
            </configuration>
            <executions>
              <execution>
              <id>compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
              <execution>
                <id>test-compile</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>test-compile</goal>
                </goals>
              </execution>
            </executions>
        </plugin>
<% } -%>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <parameters>true</parameters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
          <delimiters>
            <delimiter>${resource.delimiter}</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
        </configuration>
      </plugin>
    </plugins>
  </build>
<% } -%>

<% if(framework === 'quarkus') { -%>
  <properties>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus.platform</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
      </plugin>
    </plugins>
  </build>
<% } -%>

<% if(framework === 'micronaut') { -%>
  <properties>
      <maven.compiler.source>${java.version}</maven.compiler.source>
      <maven.compiler.target>${java.version}</maven.compiler.target>
      <maven.compiler.release>${java.version}</maven.compiler.release>
      <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
      <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
      <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
      <maven-failsafe-plugin.version>3.2.2</maven-failsafe-plugin.version>
      <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
      <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
      <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
      <maven-shade-plugin.version>3.5.1</maven-shade-plugin.version>
      <maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>
      <micronaut-maven-plugin.version>4.0.7</micronaut-maven-plugin.version>
      <micronaut.core.version>4.2.0</micronaut.core.version>
      <micronaut.serialization.version>2.4.0</micronaut.serialization.version>
      <micronaut.test.resources.version>2.2.0</micronaut.test.resources.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.micronaut.platform</groupId>
        <artifactId>micronaut-platform</artifactId>
        <version>${micronaut.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
          <plugin>
            <groupId>io.micronaut.maven</groupId>
            <artifactId>micronaut-maven-plugin</artifactId>
            <version>${micronaut-maven-plugin.version}</version>
            <extensions>true</extensions>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven-compiler-plugin.version}</version>
              <configuration>
                  <annotationProcessorPaths>
                      <path>
                          <groupId>io.micronaut</groupId>
                          <artifactId>micronaut-inject-java</artifactId>
                          <version>${micronaut.core.version}</version>
                      </path>
                  </annotationProcessorPaths>
              </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven-enforcer-plugin.version}</version>
            <dependencies>
                <dependency>
                    <groupId>io.micronaut.maven</groupId>
                    <artifactId>micronaut-maven-enforcer-rules</artifactId>
                    <version>${micronaut-maven-plugin.version}</version>
                </dependency>
            </dependencies>
            <executions>
                <execution>
                    <id>micronaut-enforce</id>
                    <goals>
                        <goal>enforce</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <rules combine.children="append">
                    <requireJavaVersion>
                        <version>${java.version}</version>
                    </requireJavaVersion>
                    <checkSnakeYaml/>
                </rules>
            </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
<% } -%>

</project>
